#!/bin/sh
LANG_SHORT=${LANG%%_*}
[ -z "$LANG_SHORT" ] && LANG_SHORT='en'
BOLD='\033[1m'
DEINST='\033[1;38;5;196m'
RESET='\033[0m'
COMMAND=$(basename $0)
version=0.1

help() {
    case "$LANG_SHORT" in
        es)
        cat <<- EOF
${BOLD}Modo de uso:$RESET "$COMMAND" [opción]

${BOLD}Comandos:$RESET
  autopurge     Purgar de forma automática los paquetes que están en estado "deinstall"
                (requiere ejecutar como root).

${BOLD}Opciones:$RESET
  -d            Listar los paquetes desinstalados pero no purgados (estado "deinstall")
                e indicar cuántos hay al final
  -H            No listar los paquetes en hold (retenidos)
  -h            Listar los paquetes en "hold" (retenidos) y mostrar cuántos hay
  -i            Listar paquetes instalados (y retenidos con un superíndice *)
  -P            Purgar de forma automática los paquetes que están en estado "deinstall"
                (requiere ejecutar como root).
  -q            Salida silenciosa, solo el listado principal
      --help    Mostrar esta ayuda
      --version muestra la versión del programa y finaliza
EOF
    ;;
        *)
        cat <<- EOF
${BOLD}Usage mode:$RESET "$COMMAND" [option]

${BOLD}Commands:$RESET
  autopurge     Automatically purge packages in "deinstall" state
                (requires running as root).

${BOLD}Options:$RESET
  -d            List packages marked as "deinstall" (removed but not purged)
                and show the total number at the end
  -H            Do not list packages on hold
  -h            List packages on "hold" and display how many there are
  -i            List installed packages (and held ones with a superscript *)
  -iq           Same as -i but without totals
                (requires running as root).
  -q            Quiet output, only the main list
      --help    Show this help.
      --version output version information and exit
EOF
    ;;
    esac
}

err() {
    case "$LANG_SHORT" in
        es)
            case "$1" in
                1) printf "Solo se permite un argumento.\n" >&2 ;;
                2) printf "No hay paquetes para purgar.\n"  >&2 ;;
                #3) printf "Opción incorrecta.\n"  >&2 ;;
                100) printf "\033[1;5;38;5;196m¡¡¡Permiso denegado!!!\033[0m\n" ;;
            esac
        ;;
        *)
            case "$1" in
                1) printf "A single argument is the only valid input.\n" >&2 ;;
                2) printf "Nothing to purge.\n" >&2 ;;
                #3) printf "Invalid option.\n" >&2 ;;
                100) printf "\033[1;5;38;5;196mPermission denied!!!\033[0m\n" ;;
            esac
        ;;
    esac
    case "$LANG_SHORT" in
        es) echo "Modo de uso: "$COMMAND" [-d|-h|-i|-q]" >&2 ;;
        *) echo "Usage: "$COMMAND" [-d|-h|-i|-q]" >&2 ;;
    esac
    exit $1
}

if [ "$#" -gt 1 ]; then
    for a in "$@"; do
        if [ "$a" = '--help' ]; then
            help
            exit 0
        fi
    done
    err 1
elif [ "$#" -eq 0 ]; then
    dpkg --get-selections | awk -f dpkg_get.awk
elif [ "$#" -eq 1 ]; then
    case $1 in
        autopurge|-P)
            if [ "$(id -u)" -eq 0 ]; then
                dpkgs=$(dpkg --get-selections | awk -v flag="-dq" -f dpkg_get.awk)
                if [ -n "$dpkgs" ]; then
                    for debpkg in $dpkgs; do
                        case "$LANG_SHORT" in
                            es) action="Purgando" ;;
                            *) action="Purging" ;;
                        esac
                        printf "%s: %s%s%s\n" "$action" "$DEINST" "$debpkg" "$RESET"
                        if dpkg -P "$debpkg" > /dev/null 2>&1; then
                            printf "\033[1m✓\033[0m %-4s %s\n" " " "$debpkg"
                        else
                            printf "\033[1;38;5;196m✗\033[0m error %-4d %s\n" "$?" "$debpkg" >&2
                        fi
                    done
                else
                    err 2
                fi
            else
                err 100
            fi
        ;;
        -*)
            dpkg --get-selections | awk -v lang="$LANG_SHORT" -v flag="$1" -f dpkg_get.awk
            exit_code="$?"
            if [ "$exit_code" -ne 0 ]; then
                exit "$exit_code"
            fi
        ;;
        --help) help ;;
        --version) printf "%s %s\n" "$(basename "$0")" "$version" ;;
    esac
fi
